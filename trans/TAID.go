package trans

import (
	"NPP/byteutil"
	"NPP/easy8583"
	"encoding/hex"
	"strings"
)

// TRANS_AID_STATUS  AID状态上送
// 0039600601000061320032020508200000000000C00014303931303135313533303833353031393339393030383000110000000138200003313030
func ZAIDStatus8583(down *easy8583.Easy8583, up *easy8583.Easy8583) []byte {
	bw := "006A" +
		"6000000601613200320205" +
		"0830" +
		"0018000002C00014" +
		"164719" +
		"0325" +
		"3030" +
		"3039313031353135" +
		"333038333530313933393930303830" +
		"0011000000013820" +
		"0045319F0608A0000003330101019F0608A0000003330101029F0608A0000003330101039F0608A000000333010106"
	return byteutil.HexStringToBytes(bw)
}

// TRANS_LOAD_AID AID参数下载
// 0041600601000061320032020508000000000000C000143039313031353135333038333530313933393930303830001100000001380000119F0608A000000333010101
func ZLoadAID8583(down *easy8583.Easy8583, up *easy8583.Easy8583) []byte {
	field62 := hex.EncodeToString(up.Field_R[62-1].Data)
	bw := ""
	if strings.HasSuffix(field62, "1") {
		bw = "00AE" +
			"6000000601613200320205" +
			"0810" +
			"0018000002C00014" +
			"16472303253030303931303135313533303833353031393339393030383000110000000138000113319F0608A000000333010101DF0101009F08020020DF1105D84000A800DF1205D84004F800DF130500100000009F1B0400000001DF150400000000DF160199DF170199DF14039F3704DF1801019F7B06000000100000DF1906000000100000DF2006000000100000DF2106000000100000"
	} else if strings.HasSuffix(field62, "2") {
		bw = "00AE600000060161320032020508100018000002C0001416472803253030303931303135313533303833353031393339393030383000110000000138000113319F0608A000000333010102DF0101009F08020020DF1105D84000A800DF1205D84004F800DF130500100000009F1B0400000001DF150400000000DF160199DF170199DF14039F3704DF1801019F7B06000000100000DF1906000000100000DF2006000000100000DF2106000000100000"
	} else if strings.HasSuffix(field62, "3") {
		bw = "00AE600000060161320032020508100018000002C0001416473303253030303931303135313533303833353031393339393030383000110000000138000113319F0608A000000333010103DF0101009F08020020DF1105D84000A800DF1205D84004F800DF130500100000009F1B0400000001DF150400000000DF160199DF170199DF14039F3704DF1801019F7B06000000100000DF1906000000100000DF2006000000100000DF2106000000100000"
	} else if strings.HasSuffix(field62, "6") {
		bw = "00AE600000060161320032020508100018000002C0001416473803253030303931303135313533303833353031393339393030383000110000000138000113319F0608A000000333010106DF0101009F08020020DF1105D84000A800DF1205D84004F800DF130500100000009F1B0400000001DF150400000000DF160199DF170199DF14039F3704DF1801019F7B06000000100000DF1906000000100000DF2006000000100000DF2106000000100000"
	}
	return byteutil.HexStringToBytes(bw)
}

// 0034600601000061320032020508000000000000C0001030393130313531353330383335303139333939303038300011000000013810
func ZLoadAIDEnd8583(down *easy8583.Easy8583, up *easy8583.Easy8583) []byte {
	bw := "0047" +
		"60000006016132003202050810001800000AC000101647430325303436383739303837353634303030393130313531353330383335303139333939303038300011000000013810"
	return byteutil.HexStringToBytes(bw)
}

// TRANS_CAPK_STATUS CAPK状态上送
// 0039600601000061320032020508200000000000C00014303931303135313533303833353031393339393030383000110000000137200003313030
func ZCAPKStatus8583(down *easy8583.Easy8583, up *easy8583.Easy8583) []byte {
	bw
	return byteutil.HexStringToBytes(bw)
}

// TRANS_LOAD_CAPK 下载CAPK
// 0042600601000061320032020508000000000000C000143039313031353135333038333530313933393930303830001100000001370000129F0605A0000000659F220109
func ZLoadCAPK88583(down *easy8583.Easy8583, up *easy8583.Easy8583) []byte {
	field62 := hex.EncodeToString(up.Field_R[62-1].Data)
	bw := ""
	if strings.HasSuffix(field62, "09") {
		bw = "00FC600000060161320032020508100018000002C0001416475203253030303931303135313533303833353031393339393030383000110000000137000191319F0605A0000000659F220109DF05083230313431323331DF060101DF070101DF028180B72A8FEF5B27F2B550398FDCC256F714BAD497FF56094B7408328CB626AA6F0E6A9DF8388EB9887BC930170BCC1213E90FC070D52C8DCD0FF9E10FAD36801FE93FC998A721705091F18BC7C98241CADC15A2B9DA7FB963142C0AB640D5D0135E77EBAE95AF1B4FEFADCF9C012366BDDA0455C1564A68810D7127676D493890BDDF040103DF03144410C6D51C2F83ADFD92528FA6E38A32DF048D0A"
	} else if strings.HasSuffix(field62, "10") {
		bw = "012C600000060161320032020508100018000002C0001416483603253030303931303135313533303833353031393339393030383000110000000137000239319F0605A0000003339F220109DF05083230313831323331DF060101DF070101DF0281B0EB374DFC5A96B71D2863875EDA2EAFB96B1B439D3ECE0B1826A2672EEEFA7990286776F8BD989A15141A75C384DFC14FEF9243AAB32707659BE9E4797A247C2F0B6D99372F384AF62FE23BC54BCDC57A9ACD1D5585C303F201EF4E8B806AFB809DB1A3DB1CD112AC884F164A67B99C7D6E5A8A6DF1D3CAE6D7ED3D5BE725B2DE4ADE23FA679BF4EB15A93D8A6E29C7FFA1A70DE2E54F593D908A3BF9EBBD760BBFDC8DB8B54497E6C5BE0E4A4DAC29E5DF040103DF0314A075306EAB0045BAF72CDD33B3B678779DE1F527"
	} else if strings.HasSuffix(field62, "12") {
		bw = "00FC600000060161320032020508100018000002C0001416484003253030303931303135313533303833353031393339393030383000110000000137000191319F0605A0000003339F22010ADF05083230313431323331DF060101DF070101DF028180B2AB1B6E9AC55A75ADFD5BBC34490E53C4C3381F34E60E7FAC21CC2B26DD34462B64A6FAE2495ED1DD383B8138BEA100FF9B7A111817E7B9869A9742B19E5C9DAC56F8B8827F11B05A08ECCF9E8D5E85B0F7CFA644EFF3E9B796688F38E006DEB21E101C01028903A06023AC5AAB8635F8E307A53AC742BDCE6A283F585F48EFDF040103DF0314C88BE6B2417C4F941C9371EA35A377158767E4E3"
	} else if strings.HasSuffix(field62, "14") {
		bw = "0174600000060161320032020508100018000002C0001416480703253030303931303135313533303833353031393339393030383000110000000137000311319F0605A0000000659F220114DF05083230313631323331DF060101DF070101DF0281F8AEED55B9EE00E1ECEB045F61D2DA9A66AB637B43FB5CDBDB22A2FBB25BE061E937E38244EE5132F530144A3F268907D8FD648863F5A96FED7E42089E93457ADC0E1BC89C58A0DB72675FBC47FEE9FF33C16ADE6D341936B06B6A6F5EF6F66A4EDD981DF75DA8399C3053F430ECA342437C23AF423A211AC9F58EAF09B0F837DE9D86C7109DB1646561AA5AF0289AF5514AC64BC2D9D36A179BB8A7971E2BFA03A9E4B847FD3D63524D43A0E8003547B94A8A75E519DF3177D0A60BC0B4BAB1EA59A2CBB4D2D62354E926E9C7D3BE4181E81BA60F8285A896D17DA8C3242481B6C405769A39D547C74ED9FF95A70A796046B5EFF36682DC29DF040103DF0314C0D15F6CD957E491DB56DCDD1CA87A03EBE06B7B"
	} else if strings.HasSuffix(field62, "01") {
		bw
	} else if strings.HasSuffix(field62, "02") {
		bw
	} else if strings.HasSuffix(field62, "03") {
		bw
	} else if strings.HasSuffix(field62, "04") {
		bw = "0174600000060161320032020508100018000002C0001416482603253030303931303135313533303833353031393339393030383000110000000137000311319F0605A0000003339F220104DF05083230323531323331DF060101DF070101DF0281F8BC853E6B5365E89E7EE9317C94B02D0ABB0DBD91C05A224A2554AA29ED9FCB9D86EB9CCBB322A57811F86188AAC7351C72BD9EF196C5A01ACEF7A4EB0D2AD63D9E6AC2E7836547CB1595C68BCBAFD0F6728760F3A7CA7B97301B7E0220184EFC4F653008D93CE098C0D93B45201096D1ADFF4CF1F9FC02AF759DA27CD6DFD6D789B099F16F378B6100334E63F3D35F3251A5EC78693731F5233519CDB380F5AB8C0F02728E91D469ABD0EAE0D93B1CC66CE127B29C7D77441A49D09FCA5D6D9762FC74C31BB506C8BAE3C79AD6C2578775B95956B5370D1D0519E37906B384736233251E8F09AD79DFBE2C6ABFADAC8E4D8624318C27DAF1DF040103DF0314F527081CF371DD7E1FD4FA414A665036E0F5E6E5"
	}
	return byteutil.HexStringToBytes(bw)
}

//	TRANS_LOAD_CAPK_END
//
// 0034600601000061320032020508000000000000C0001030393130313531353330383335303139333939303038300011000000013710
func ZLoadCAPKEnd88583(down *easy8583.Easy8583, up *easy8583.Easy8583) []byte {
	bw := "004760000006016132003202050810001800000AC000101649430325303436383739303837353634303030393130313531353330383335303139333939303038300011000000013710"
	return byteutil.HexStringToBytes(bw)
}
